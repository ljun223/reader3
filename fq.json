[
  {
    "bookSourceComment": "up_date: 2024-03-22\nauthors: 钓鱼竿钓大鱼(原作) & joyway(接口) & 无聊的我(接口) & 遇知(接口) & 梓澄qwq(修改)  & Thomas喲(修改)\n\n禁止发源仓库！！！！！！！\n转载注明出处，请不要移除源注释中的任何内容\n使用本书源造成的任何损失与书源作者无关\naids = [13, 1319, 19, 1967, 2329];\n添加搜索不到的书籍：\nhttps://reading.snssdk.com/reading/bookapi/detail/v/?book_id=【书籍ID】\n（20240322 notice） 作者删书书籍因接口存在问题，目前无法使用，等一个大佬修复（novel.snssdk.com接口）\n\n20240322 0101更新(梓澄qwq): 修复看漫画\n20240321 0230更新(梓澄qwq): 支持看漫画\n20240321 0208更新(梓澄qwq): 为搜索测试关键字加注释\n20240321 0159更新(梓澄qwq): 将头条接口请求方式改为okhttp以防止因阅读版本差异而错误使用reading.snssdk.com替换novel.snssdk.com进行请求的问题\n20240321 0147更新(梓澄qwq): 统一注册设备时udid的写法\n20240321 0144更新(梓澄qwq): 尝试移除潜在的snssdk.com cookie防止图文接口正文Invalid的问题\n20240321 0140更新(梓澄qwq): 将com.dragon.read请求头移动至xGorgon函数，其余不强行验证的接口遵照阅读设定处理请求头",
    "bookSourceGroup": "💯 常用",
    "bookSourceName": "🍅 番茄小说",
    "bookSourceType": 0,
    "bookSourceUrl": "https://reading.snssdk.com",
    "bookUrlPattern": "https://fanqienovel.com/page/\\d+|.*(wldw|aid=(1[93](67)?|2329)).*book_id.*|https://changdunovel.com.*",
    "coverDecodeJs": "",
    "customOrder": -175,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "@js:\n我的书架 = 1\n男频分类 = 1\n女频分类 = 1\n出版分类 = 1\n\n\n\njava.toast(\"请稍等，发现列表正在热更新！\");\nlet path = \"new_category/front\";\nlet params = \"update_version_code=99999&distinct_style=1&new_category_tab=\";\n\nlet sort = [];\npush = (title, url, type) => sort.push({\n    title: title,\n    url: url,\n    style: {\n        layout_flexGrow: 1,\n        layout_flexBasisPercent: type\n    }\n});\n$$ = (category_id) => `@js:\nxGorgon(\n    \"new_category/landing\",\n    [\n        \"limit=20\",\n        \"offset=\" + (page - 1),\n        \"category_id=${category_id}\"\n    ].join(\"&\")\n);`;\n\nfunction PUSH(tab_i) {\n    let $ = JSON.parse(java.ajax(\n        xGorgon(path, params + tab_i)\n    )).data.category_tab_data;\n    push(\"༺ˇ»`ʚ \" + $.tab_name + \" ɞ´«ˇ༻\", null, 1);\n    $.cell_data.forEach((c) => {\n        push(\"༺ \" + c.cell_name.replace('热门', '') + \" ༻\", $$(c.atom_data[0].category_data.category_id), 1);\n        for (let j = 2; j < 5; j++) {\n            c.atom_data.slice(1).forEach((a) => {\n                let d = a.category_data;\n                if (d.name.length == j) {\n                    push(d.name, $$(d.category_id), -1);\n                }\n            });\n        }\n    });\n}\nif (我的书架) push(\"我的书架\", \"/\", 1);\nif (男频分类) PUSH(1);\nif (女频分类) PUSH(0);\nif (出版分类) PUSH(2);\nJSON.stringify(sort);",
    "header": "",
    "jsLib": "getHost = (a, b, c, d) => [\n    [\"https://\"][0],\n    [\n        \"reading\",\n        \"api\",\n        \"api3\",\n        \"api5\",\n        \"novel\",\n        \"\",\n    ][(a == 4 ? 5 : b) || 0],\n    [\n        \"\",\n        \"-normal\",\n    ][c || 0],\n    [\n        \"\",\n        \"-hl\",\n        \"-lf\",\n        \"-lq\",\n        \"-sinfonlinea\",\n        \"-sinfonlineb\",\n        \"-sinfonlinec\",\n    ][d || 0],\n    [\".\", \"\"][a == 4 ? 1 : 0],\n    [\n        \"snssdk\",\n        \"fqnovel\",\n        \"fanqiesdk\",\n        \"toutiaoapi\",\n        \"fanqienovel\",\n    ][a || 0],\n    [\".com\"][0],\n].join(\"\");\njavaImport = new JavaImporter()\njavaImport.importPackage(\n    Packages.okhttp3,\n    Packages.cn.hutool.core.util,\n    Packages.cn.hutool.core.codec,\n    Packages.cn.hutool.crypto.digest\n)\nwith(javaImport) {\n    //手机型号\n    prop = SystemPropsUtil.getProps();\n    device = String(prop).split(\" \")[6];\n\n    //POST请求\n    function post(url, body, map) {\n        let json = MediaType.parse(\"application/json\");\n        request = new Request.Builder()\n            .url(url)\n            .post(RequestBody.create(body, json));\n        if (map) {\n            request.addHeader(\"Content-Encoding\", \"gzip\");\n            for (let n in map) {\n                request.addHeader(n, map[n]);\n            }\n        }\n        let client = new OkHttpClient();\n        let response = client.newCall(request.build()).execute();\n        return JSON.parse(response.body().string());\n    }\n\n    function okhttpGet(url, map) {\n        request = new Request.Builder()\n            .url(url)\n            .get();\n        if (map) {\n            request.addHeader(\"Content-Encoding\", \"gzip\");\n            for (let n in map) {\n                request.addHeader(n, map[n]);\n            }\n        }\n        let client = new OkHttpClient();\n        let response = client.newCall(request.build()).execute();\n        return JSON.parse(response.body().string());\n    }\n\n\n    //gzip压缩\n    gzip = (data) => ZipUtil.gzip(data, \"\");\n\n    //gzip解压\n    ungz = (data) => ZipUtil.unGzip(data, \"\");\n\n    //Base64编码\n    b64En = (b64) => Base64.encode(b64);\n\n    //Base64解码\n    b64De = (b64) => Base64.decode(b64);\n\n    //ttEncrypt\n    function TT(data) {\n        const {\n            java\n        } = this;\n\n        //SHA512加密\n        sha = (arr) => DigestUtil.sha512(arr);\n        value = RandomUtil.randomBytes(32);\n        arr = b64De(\"TdTC5rgxYgkOUrPHpnM7pByyRiuCmrWKGWs521cXdST0m69/COjWjSanLjfBqVovHwWlGJKu8pSXMrYqOKrdWA==\")\n        arr = sha(sha(value).concat(arr));\n        key = arr.slice(0, 16);\n        iv = arr.slice(16, 32);\n\n        data = gzip(data);\n        data = sha(data).concat(data);\n        data = java.createSymmetricCrypto(\"AES/CBC/PKCS5Padding\", key, iv).encrypt(data);\n        return [116, 99, 5, 16, 0, 0].concat(value, data);\n    }\n\n    //X-Gorgon参数\n    function xGorgon(path, params, data) {\n        const {  java, source  } = this;\n        params = [\n            params,\n            \"aid=1967\",\n            \"channel=0\",\n            \"os_version=0\",\n            \"app_name=novelapp\",\n            \"version_code=99999\",\n            \"device_platform=android\",\n            source.getLoginHeader() || \"\",\n        ].join(\"&\").split(\"&\").sort().join(\"&\").replace(/^&+/, \"\");\n        if (!data) {\n            path = \"/reading/bookapi/\" + path + \"/v/?\";\n        }\n        let url = getHost() + path + params;\n\n\n        //md5加密\n        md5 = (str) => DigestUtil.md5Hex(str);\n\n        //反转字符串\n        rStr = (str) => StrUtil.reverse(str);\n\n        //10转16进制\n        Hex = (num) => num.toString(16).padStart(2, \"0\");\n\n        //反转16进制\n        rHex = (num) => parseInt(rStr(Hex(num)), 16);\n\n        //反转2进制\n        function rBin(num) {\n            let bin = num.toString(2).padStart(8, \"0\");\n            return parseInt(rStr(bin), 2);\n        }\n\n\n\n        //运算\n        function getHex() {\n            let hex = md5(params)\n            hex += data ? md5(data) : \"0\".repeat(32)\n            hex += \"0\".repeat(32)\n            return hex\n        }\n\n        function calculate(hex) {\n            let len = 0x14;\n            let key = [0xDF, 0x77, 0xB9, 0x40, 0xB9, 0x9B, 0x84, 0x83, 0xD1, 0xB9, 0xCB, 0xD1, 0xF7, 0xC2, 0xB9, 0x85, 0xC3, 0xD0, 0xFB, 0xC3];\n            let paramList = [];\n            for (let i = 0; i < 9; i += 4) {\n                let temp = hex.substring(8 * i, 8 * (i + 1));\n                for (let j = 0; j < 4; j++) {\n                    let h = parseInt(temp.substring(j * 2, (j + 1) * 2), 16);\n                    paramList.push(h);\n                }\n            }\n            paramList.push(0x0, 0x6, 0xB, 0x1C);\n            let T = Math.floor(Date.now() / 1000);\n            paramList.push((T >> 24) & 0xFF, (T >> 16) & 0xFF, (T >> 8) & 0xFF, T & 0xFF);\n            //异或\n            let eorResultList = []\n            for (let i = 0; i < paramList.length; i++) {\n                eorResultList.push(paramList[i] ^ key[i % len]);\n            }\n            for (let A, B, C, D, i = 0; i < len; i++) {\n                A = rHex(eorResultList[i]);\n                B = eorResultList[(i + 1) % len];\n                C = rBin(A ^ B);\n                D = ((C ^ 0xFFFFFFFF) ^ len) & 0xFF;\n                eorResultList[i] = D;\n            }\n            let result = \"\"\n            for (let param of eorResultList) {\n                result += Hex(param);\n            }\n            let option = {\n                \"headers\": {\n                    \"X-Khronos\": String(T),\n                    \"X-Gorgon\": \"0404b0d30000\" + result,\n                    \"User-Agent\": \"com.dragon.read\"\n                }\n            }\n            if (data) {\n                return post(url, data, option.headers).data;\n            } else {\n                return JSON.stringify(option);\n            }\n        }\n        if (data) {\n            return calculate(getHex());\n        } else {\n            return url + \",\" + calculate(getHex());\n        }\n    }\n}",
    "lastUpdateTime": 1711040856180,
    "loginUi": "[{\n\tname: \"　　[真机注册]　　\",\n\ttype: \"button\",\n\taction: \"device_register(false)\"\n},\n{\n\tname: \"　　[随机注册]　　\",\n\ttype: \"button\",\n\taction: \"device_register(true)\"\n},\n{\n\tname: \"　　[账号登录]　　\",\n\ttype: \"button\",\n\taction: \"browser_login()\"\n},\n{\n\tname: \"　　[退出登录]　　\",\n\ttype: \"button\",\n\taction: \"logout()\"\n}]",
    "loginUrl": "// 注册设备\nfunction device_register(is_random) {\n    let char, udid, model, url, data, res, header;\n    if (is_random) {\n        // 随机信息\n        char = '0123456789ABCDEF';\n        udid = \"\";\n        for (let i = 0; i < 40; i++) {\n            udid += char.charAt(Math.floor(Math.random() * char.length))\n        }\n        udid = udid.toLowerCase();\n        char += 'GHIJKLMNOPQRSTUVWXYZ';\n        model = \"\";\n        for (let i = 0; i < 8; i++) {\n            if (i == 3) {\n                model += '-';\n            }\n            model += char.charAt(Math.floor(Math.random() * char.length));\n        }\n    } else {\n        // 真机信息\n        char = java.md5Encode(java.androidId())\n        udid = char + java.md5Encode(char).slice(0, 8)\n        model = device\n    }\n\n    if (source.getLoginHeader() && !is_random && source.getLoginHeader().includes(device)) {\n        java.toast(\"本设备已注册，无需重复注册\")\n        return false;\n    }\n    java.toast(\"开始进行设备注册: \\n设备型号: \" + model + \"\\n设备id: \" + udid)\n    java.log(\"番茄免费小说: 开始进行设备注册: \\n设备型号: \" + model + \"\\n设备id: \" + udid)\n\n\n    // 注册账号\n    url = \"https://log.snssdk.com/service/2/device_register/\";\n    data = JSON.stringify({\n        \"header\": {\n            \"package\": \"com.dragon.read\",\n            \"openudid\": udid, // openudid是40位hex\n            \"device_model\": model\n        }\n    });\n    res = post(url, TT(data));\n    header = \"device_id=\" + res.device_id + \"&device_type=\" + model + \"&iid=\" + res.install_id;\n\n    source.putLoginHeader(header);\n    java.toast(\"设备注册成功！\");\n    return true;\n}\n\n\n\n// 从网页登录\nfunction browser_login() {\n    // java.removeCookie(\"snssdk.com\")\n    var cookie = java.getCookie(\"fanqienovel.com\")\n    java.log(cookie)\n    if (cookie && cookie != \"\") {\n        java.toast(\"请不要重复登录，请先退出登录！\")\n        return false\n    }\n    try {\n        java.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\")\n    } catch (e) {\n        java.toast(e)\n    }\n    // java.log(\"snssdk cookie: \" + java.getCookie(\"snssdk.com\") + \"will be reomved\")\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {}\n    // java.log(cookie)\n    var cookie = java.getCookie(\"fanqienovel.com\")\n    if (!cookie || cookie == \"\") {\n        java.toast(\"未获取到登录凭据，登录失败\")\n        return false\n    }\n    java.toast(\"登录成功！\")\n    return true\n}\n\n\n\n// 取消登录\nfunction logout() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n    java.toast(\"退出登录成功\");\n}",
    "respondTime": 184927,
    "ruleBookInfo": {
      "author": "author",
      "coverUrl": "<js>\nlet replaceCover = (u) => {\n    if (u.startsWith(\"https://\")) u = u.substring(8)\n    else u = u.substring(7)\n    let uArr = u.split(\"/\")\n    uArr[0] = \"https://p6-novel.byteimg.com/origin\"\n    let uArr2 = []\n    uArr.forEach((x) => {\n        if (!x.includes(\"?\") && !x.includes(\"~\")) uArr2.push(x)\n        else uArr2.push(x.split(\"~\")[0])\n    })\n    u = uArr2.join(\"/\")\n    return u\n}\nreplaceCover(java.getString(\"thumb_url\"))\n</js>",
      "init": "@js:\nvar Regs = [/book_id=(\\d+)/i, /d=(\\d+)/i, /(\\d+)/i];\nvar book_id = \"\";\nfor (let Reg of Regs) {\n    let mat = baseUrl.match(Reg);\n    if (mat) {\n        book_id = mat[1];\n        break;\n    }\n}\n\n\n\nvar u_Index = 0; // 0-1\nswitch (String(['API', 'TOU'][u_Index])) {\n    case 'API':\n        result = java.ajax(xGorgon(\n            \"detail\",\n            \"book_id=\" + book_id\n        ));\n        if (JSON.parse(result).code == 0) break;\n        // java.log(\"接口异常，使用头条接口获取\");\n\n        // 这两个接口信息不全\n        // result = java.ajax(\"https://fanqienovel.com/page/\"+book_id).match(/__INITIAL_STATE__=([^;]+)/)[1];\n        // result = java.ajax(getHost(1,3,1,5)+\"/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id=\"+book_id);\n\n        // 头条接口\n    default:\n        result = java.ajax(\"https://novel.snssdk.com/api/novel/book/directory/list/v1/?device_platform=android&version_code=1207&novel_version=&app_name=gold_browser&version_name=2.0.7&channel=vivo_6589_64&device_type=wldw&os_api=28&os_version=9&book_id=\" + book_id);\n        break;\n}\nvar Res  = JSON.parse(result);\nvar data = Res.page || Res.data;\ndata = (Array.isArray(data) ? data[0] : data.book_info) || data;\nJSON.stringify(data);",
      "intro": "&nbsp;&nbsp;\n📕 源名：{{$.original_book_name}}\n📖 别名：{{$.book_flight_alias_name}}\n✏️ 开坑：{{$.create_time##T|\\+.*## }}\n🏷️ 标签：{{$.tags}}\n👤 主角：{{$.roles##\\[|\\\"|\\]}}\n👁️ 在线：{{$.read_count}}人在读{{\"\\n\"+\"​\"}}\n📜 简介：{{$.abstract}}{{\"\\n\"+\"​\"}}\n📍 {{$.copyright_info##，.*##。}}\n@js:result.replace(/.+：(人在读)?\\n/g,\"\")",
      "kind": "男生{{$.gender}}女生\n{{$.category}}\n连载{{$.creation_status}}完结\n{{$.score}}分\n{{java.timeFormatUTC(java.getString(\"last_chapter_update_time\")*1000,'yyyy-MM-dd',8)}}\n##连载0|1完结|男生0|1女生\n@js:result\n.replace(\"男生2女生\",\"出版\")\n.replace(\"连载4完结\",\"断更\")\n.replace(\"连载-1完结\",\"未知\");",
      "lastChapter": "{{$.last_chapter_title}} • {{java.timeFormat(java.getString(\"last_chapter_update_time\")*1000)}}",
      "name": "book_name",
      "tocUrl": "book_id\n<js>java.base64Encode(result)</js>\ndata:book_id;base64,{{result}},{\"type\":\"fqnovel\"}",
      "wordCount": "word_number"
    },
    "ruleContent": {
      "content": "<js>\nitem_id = java.hexDecodeToString(result);\ntry { // 图文接口\n\n\n    // AES解密\n    function De(data, key, iv) {\n        let aes = java.createSymmetricCrypto(\"AES/CBC/PKCS5Padding\", key, iv);\n        return aes.decrypt(data);\n    }\n\n\n    // AES加密\n    function En(data, key, iv) {\n        let aes = java.createSymmetricCrypto(\"AES/CBC/PKCS5Padding\", key, iv);\n        return aes.encrypt(data);\n    }\n\n\n    // 反转HEX\n    function rHex(num) {\n        let hex = Number(num).toString(16).padStart(32, \"0\");\n        let res = \"\";\n        for (let i = hex.length; i > 0; i -= 2) {\n            res += hex.substring(i - 2, i);\n        }\n        return res;\n    }\n\n\n    // 获取KEY\n    function getKey() {\n        let key = b64De(\"rCXGfd2POMGzeiNIgo4iLg==\");\n        let iv = java.strToBytes(java.randomUUID().slice(0, 16));\n        let did = baseUrl.match(/device_id=(\\d+)/)[1];\n        let data = java.hexDecodeToByteArray(rHex(did));\n        let content = b64En(iv.concat(En(data, key, iv)));\n        let obj = xGorgon(\n            \"/reading/crypt/registerkey?\",\n            \"\",\n            gzip(JSON.stringify({\n                \"content\": content\n            }))\n        );\n        let res = b64De(obj.key);\n        data = res.slice(16);\n        iv = res.slice(0, 16);\n        key = b64En(De(data, key, iv));\n        obj = {\n            \"key\": key,\n            \"ver\": obj.keyver\n        }\n        source.setVariable(JSON.stringify(obj, \"\", \"\\t\"))\n    }\n\n\n    // 获取URL\n    function getBaseUrl() {\n        return String(xGorgon(\n            \"reader/full\",\n            \"item_id=\" + item_id\n        )).replace(\"bookapi/\", \"\");\n    }\n    baseUrl = getBaseUrl();\n\n\n    // 获取TXT\n    result = JSON.parse(java.ajax(baseUrl)).data;\n    if (result.content == \"Invalid\") {\n        getKey();\n        result = JSON.parse(java.ajax(getBaseUrl())).data;\n    }\n    if (((v = source.getVariable()) == \"\") || (result.key_version != JSON.parse(v).ver)) {\n        getKey();\n    }\n    res = b64De(result.content);\n    obj = JSON.parse(source.getVariable());\n    key = b64De(obj.key);\n    iv  = res.slice(0, 16);\n    result = java.bytesToStr(De(res.slice(16), key, iv));\n    try {\n        var comicInfo = JSON.parse(result)\n        var res = \"\"\n        comicInfo.picInfos.forEach(i => {\n          res += `<img src=\"https://p3-novel.byteimg.com/origin/novel-pic/${i.md5}\">\\n`\n        })\n        result = res\n    } catch (e) {}\n    // java.log(result)\n    // if (result.includes(\"encrypt_key\") && result.includes(\"width\")) {throw new Error(\"漫画走老接口，app漫画接口不会图片解密\")}\n}\n\n\n// 正文获取失败！使用备用接口。\n// 可能是作者删除了书籍，或者接口失效了。\ncatch (err1) {\n    java.log(\"尝试头条接口\")\n    try { // 头条接口  by: joyway\n        url2 = \"https://novel.snssdk.com/api/novel/book/reader/full/v1/?device_platform=android&version_code=973&app_name=news_article&version_name=9.7.3&app_version=9.7.3&device_id=1&channel=google&device_type=1&os_api=33&os_version=13&aid=1319&item_id=\" + item_id;\n        result = okhttpGet(url2).data.content;\n    }\n\n\n    // 镜像接口  by: 遇知 & 无聊的我\n    catch (err2) { // 获取不了下架书\n        java.log(\"尝试FQWeb\")\n        function getCon(uType, run) {\n            try {\n                if (uType) {\n                    host = \"http://fq.travacocro.com\";\n                } else {\n                    host = \"https://fqw.suniki.zcmonety.xyz\";\n                }\n                host += \"/content?item_id=\" + item_id;\n                let Res = JSON.parse(java.ajax(host)).data;\n                if (Res.code == 0 && Res.data.content) {\n                    return Res.data.content;\n                } else {\n                    throw new Error(\"code != 0\");\n                }\n            } catch (err) {\n                if (run) {\n                    return getCon(!uType, !run);\n                } else {\n                    return \"\\n接口好像崩溃了，无法获取正文。\";\n                }\n            }\n        }\n        result = getCon(Math.round(Math.random()) == 0, true);\n    }\n}\nString(result).replace(/\\n/g, '<br>');\n</js>\n@@p@html||html",
      "imageStyle": "FULL",
      "nextContentUrl": "",
      "replaceRegex": "",
      "sourceRegex": ""
    },
    "ruleExplore": {
      "author": "$.author",
      "bookList": "<js>\nif (baseUrl.length == 27) {// 获取\"我的书架\"\n    let $, url, header = {\n        \"headers\": {\n            \"Cookie\": java.getCookie(\"fanqienovel.com\")\n        }\n    }\n    url = \"https://fanqienovel.com/reading/bookapi/bookshelf/info/v:version/?aid=1967&iid=0&version_code=57700&update_version_code=57700,\" + JSON.stringify(header);\n    $ = JSON.parse(java.ajax(url));\n    if ($.code != 0) {\n        java.toast(\"请先登录账号！\");\n        cookie.removeCookie(\"fanqienovel.com\");\n    } else {\n        let books = $.data.book_shelf_info\n            .map($ => ({\n                book_id: $.book_id + \"\",\n                item_id: \"0\"\n            }));\n        url = \"https://fanqienovel.com/api/bookshelf/multidetail,\" + JSON.stringify(Object.assign({\n            \"body\": {\n                books: books\n            },\n            \"method\": \"POST\"\n        }, header));\n        result = java.ajax(url);\n    }\n}\nresult\n</js>\n$..book_info[*]||$..detail_list[*]",
      "bookUrl": "/reading/bookapi/detail/v/?book_id={{$.book_id}}",
      "coverUrl": "$.thumb_url",
      "intro": "$.abstract##\\n",
      "kind": "男生{{$.gender}}女生\n连载{{$.creation_status}}完结\n{{$.score}}分\n{{$..text}}\n{{$.sub_info}}\n##连载0|1完结|男生0|1女生|男生女生[\\s\\S]*\n@js:result\n.replace(\"男生2女生\",\"出版\")\n.replace(\"连载4完结\",\"断更\")\n.replace(\"连载-1完结\",\"未知\");",
      "lastChapter": "",
      "name": "$.book_name",
      "wordCount": "$.word_number"
    },
    "ruleSearch": {
      "author": "author",
      "bookList": "<js>\n搜索接口2 = 1;\n搜索接口3 = 1;\n\nlet book_ids = [];\nlet book_list = [];\nlet Key   = String(java.get(\"key\"));\nlet page = Number(java.get(\"page\"));\nlet push = (u, p, t) => {\n    try {\n        if (!t) {\n            // java.log(u);\n            t = java.ajax(u);\n        }\n        let list = JSON.parse(t);\n        for (let f of p) list = list[f];\n        for (let _ of list) {\n            if (!book_ids.includes(_.book_id)) {\n                book_list.push(_.book_data ? _.book_data[0] : _);\n                book_ids.push(_.book_id);\n            }\n        }\n    } catch (e) {};\n}\n\n\n// 搜索-1\npush(baseUrl, [\"search_tabs\", 3, \"data\"], result);\n\n\n// 搜索-2\nif(搜索接口2) push(getHost(1, 3, 1, 5) + \"/reading/bookapi/search/page/v/?aid=1967&channel=0&device_platform=0&device_type=0&iid=466614321180296&os_version=0&passback=\" + ((page - 1) * 10) + \"&query=\" + Key + \"&version_code=99999\", [\"data\"]);\n\n\n// 搜索-3,4  ##[13, 1967]\nfor (let aid of [1319, 2329]) {\n    if(搜索接口3) push(getHost(0, 4) + \"/api/novel/channel/homepage/search/search/v1/?aid=\" + aid + \"&q=\" + Key + \"&offset=\" + ((page - 1) * 10), [\"data\", \"ret_data\"]);\n}\n\n\n// 返回\nJSON.stringify(book_list);\n</js>$[*]",
      "bookUrl": "/reading/bookapi/detail/v/?book_id={{$.book_id}}",
      "checkKeyWord": "https://www.baidu.com/作者删书书籍示例?book_id=7285555567827880975",
      "coverUrl": "thumb_url",
      "intro": "abstract##\\n",
      "kind": "男生{{$.gender}}女生\n连载{{$.creation_status}}完结\n{{$.score}}分\n{{$..text}}\n{{$.sub_info}}\n##连载0|1完结|男生0|1女生|男生女生[\\s\\S]*\n@js:result\n.replace(\"男生2女生\",\"出版\")\n.replace(\"连载4完结\",\"断更\")\n.replace(\"连载-1完结\",\"未知\");",
      "lastChapter": "",
      "name": "book_name||title##\\s*<\\/?em>\\s*",
      "wordCount": "word_number"
    },
    "ruleToc": {
      "chapterList": "@js:\nvar u_Index = 1;     // 0-2\n\nvar u_Types = ['API', 'WEB', 'TOU'];\nvar v_Index = [];\nvar v_Names = [];\nvar c_Array = [];\nvar book_id = java.hexDecodeToString(result);\n\nfunction b64Url(item_id) {\n    return `data:item_id;base64,${java.base64Encode(item_id)},{\"type\":\"fqnovel\"}`;\n}\n\nfunction push_a(a, b, c, d) {\n    c_Array.push({\n        \"ChapterName\": a || \"\",\n        \"isVolume\": b || false,\n        \"chapterUrl\": c ? b64Url(c) : \"\",\n        \"ChapterInfo\": d || \"\",\n    });\n}\n\nfunction push_b(list) {\n    for (let c of list) {\n        let c_name = c.volume_name || \"第一卷：默认\";\n        let c_time = java.timeFormat(c.first_pass_time * 1000);\n        let c_word = c.chapter_word_number + \"字\";\n        let c_info = [c_name, c_time, c_word];\n        let v_name = v_Names[v_Names.length - 1];\n        if (v_name != c_name) {\n        \t   // java.log(c_name);\n            v_Index.push(c_Array.length);\n            v_Names.push(c_name);\n            push_a(c_name, true);\n        }\n        push_a(c.title, false, c.item_id, c_info.join(\" | \"));\n    }\n}\n\nfunction tocUrl(utype, params, run) {\n    let url = `https://novel.snssdk.com/api/novel/book/directory/${utype}/v1/?${params}`;\n    if (run) return url;\n    return JSON.parse(java.ajax(url)).data;\n}\n\nfunction push_c(arr) {\n    let newArr = [];\n    for (let i = 0; i < arr.length;) {\n        let item_ids = arr.slice(i, (i += 100));\n        newArr.push(tocUrl(\"detail\", \"item_ids=\" + item_ids, true));\n    }\n    return java.ajaxAll(newArr).map(Get => {\n        let response = String(Get.body()).replace(/\\\\/g, \"\\\\\")\n            .replace(/\\\\+([\\u4e00-\\u9fa5])/g, \"$1\")\n            .replace(/\\\\([^fnrt\"'])/g, \"$1\");\n        return push_b(JSON.parse(response).data);\n    });\n}\n\n\n\n//  app接口  ##卷名&时间&字数\nswitch (String(u_Types[u_Index])) {\n    case 'API':\n        let data = JSON.parse(java.ajax(xGorgon(\n            \"directory/all_items\",\n            \"book_id=\" + book_id\n        )));\n        if (data.code == 0) {\n            push_b(data.data.item_data_list);\n            break;\n        }\n        // java.log(\"下架书籍，使用web接口获取目录\");\n\n\n\n        //  web接口  ##卷名&时间\n    case 'WEB':\n        let Json, Host = \"https://fanqienovel.com\";\n        if (false) {\n            Json = java.ajax(Host + \"/page/\" + book_id)\n                .match(/__INITIAL_STATE__=([^;]+)/)[1];\n        } else {\n            Json = java.ajax(Host + \"/api/reader/directory/detail?bookId=\" + book_id);\n        }\n        let List = JSON.parse(Json).data.chapterListWithVolume;\n        for (let list of List) {\n            v_Index.push(c_Array.length);\n            list.map((_, i) => {\n                let c_name = _.volume_name || \"第一卷：默认\";\n                let c_time = java.timeFormat(_.firstPassTime * 1000);\n                if (!i) push_a(c_name, true);\n                push_a(_.title, false, _.itemId, [c_name, c_time].join(\" | \"))\n            });\n        }\n        break;\n\n\n        //  头条接口  ##无章节信息(需要请求)\n    default:\n        let item_list = tocUrl(\"list\", \"device_platform=android&version_code=1207&novel_version=&app_name=gold_browser&version_name=2.0.7&channel=vivo_6589_64&device_type=wldw&os_api=28&os_version=9&book_id=\" + book_id).item_list;\n        if (false) {\n            item_list.map((t, i) => {\n                push_a(\"第\" + (i + 1) + \"章\", false, t);\n            });\n        } else push_c(item_list);\n        break;\n}\n\n\n\n// 目录分卷小于二，不显示第一章的分卷。\nlet i = v_Index.length - 1;\nif (i < 1) {\n    for (; i > -1; i--) {\n        c_Array.splice(v_Index[i], 1);\n    }\n}\nc_Array",
      "chapterName": "ChapterName",
      "chapterUrl": "chapterUrl",
      "isVip": "",
      "isVolume": "isVolume",
      "preUpdateJs": "",
      "updateTime": "ChapterInfo##/##-"
    },
    "searchUrl": "@js:\nif (source.getLoginHeader() == null) {\n    eval(String(source.loginUrl));\n    device_register(false);\n}\nxGorgon(\n    \"search/tab\",\n    [\n        \"tab_type=3\",\n        \"query=\" + encodeURI(java.put(\"key\", key)),\n        \"passback=\" + ((java.put(\"page\", page) - 1) * 10)\n    ].join(\"&\")\n);",
    "variableComment": "",
    "weight": 0
  }
]
